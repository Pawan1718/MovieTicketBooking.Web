@model MovieTicketBooking.Web.ViewModels.ShowtimeViewModels.PagedShowtimeViewModel

@{
    ViewData["Title"] = "Showtime";
}
<br />
<h1 class="mt-5">Showtime List</h1>
<hr />
<div class="row">
    <div class="col-7">
        <p>
            <a asp-action="AddShowtime" class="btn btn-outline-primary">Add Showtime</a>
        </p>
    </div>

    <div class="col-4">
        <form class="form-inline d-flex justify-content-end" asp-action="Showtime" method="post">
            <input class="form-control  mr-sm-2" type="search" name="SearchText" placeholder="Search by Movie,Genre..." value="@ViewData["filterData"]" />
            <button class="btn btn-secondary my-2 my-sm-0" type="submit" value="Search">Search</button>
        </form>
    </div>
</div>
<table class="table table-striped table-bordered shadow">
    <thead>
        <tr class="table-active table-hover">
            <th>
                Show Time
            </th>
            <th>
                Theater
            </th>
            <th>
                Movie
            </th>
            <th>
                Price
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Showtimes)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TheaterName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MovieName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="EditShowtime" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a> |
                    <a href="@Url.Action("GetBookedTickets", "ShowTime", new { id = item.Id })" class="btn btn-sm btn-outline-secondary">Get Booked Tickets</a> |
                    <a asp-action="RemoveShowtime" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                </td>

            </tr>
        }
    </tbody>
</table>
@{
    var Previous = Model.pageInfo.HasPrevious ? "" : "disabled";
    var Next = Model.pageInfo.HasNext ? "" : "disabled";
}
<a asp-route-filterText="@ViewData["filterData"]" class="btn btn-sm btn btn-outline-info @Previous" asp-route-PageNo="@(Model.pageInfo.PageNo - 1)">&laquo; Prev</a>
<a asp-route-filterText="@ViewData["filterData"]" class="btn btn-sm btn btn-outline-info @Next" asp-route-PageNo="@(Model.pageInfo.PageNo + 1)">Next &raquo;</a>